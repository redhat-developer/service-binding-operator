# action.yml
name: 'Check if acceptance tests can be skipped'
description: 'Check if acceptance tests can be skipped based on the PR content'
inputs:
  set-label:
    description: "Name of the label to be set/un-set on PRs. Label would not be set/unset if empty"
    required: false
    default: ""
outputs:
  can_skip:
    description: "true if acceptance teststests can be skipped"
    value: ${{ steps.check-skip-test.outputs.result }}
runs:
  using: "composite"
  steps:
    - id: check-skip-test
      uses: actions/github-script@v6.3.3
      with:
        result-encoding: string
        script: |
          let currentCount = 0;
          let currentPage = 1;
          let overallCount = 0;
          let pageSize = 100;
          let maxPages = 30;

          const labelName = "${{ inputs.set-label }}"
          const setLabel = labelName.length > 0

          do {
            const result = await github.rest.pulls.listFiles({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.number,
              per_page: pageSize,
              page: currentPage
            })

            let fileSet = result.data.filter(f =>
                f.filename.startsWith(".github/actions/collect-kube-resources") ||
                f.filename.startsWith(".github/actions/setup-cli") ||
                f.filename.startsWith(".github/actions/setup-podman") ||
                f.filename.startsWith(".github/workflows/pr-checks") ||
                f.filename.startsWith("apis") ||
                f.filename.startsWith("build") ||
                f.filename.startsWith("config") ||
                f.filename.startsWith("controllers") ||
                f.filename === "hack/get-test-namespace" ||
                f.filename === "hack/remove-sbr-finalizers.sh" ||
                f.filename === "hack/test-cleanup.sh" ||
                f.filename.startsWith("controllers") ||
                f.filename === "make/acceptance.mk" ||
                f.filename === "make/build.mk" ||
                f.filename === "make/common.mk" ||
                f.filename === "make/release.mk" ||
                f.filename === "make/version.mk" ||
                f.filename.startsWith("pkg") ||
                f.filename.startsWith("test/acceptance") ||
                f.filename.startsWith("tools") ||
                f.filename.startsWith("vendor") ||
                f.filename === "Dockerfile" ||
                f.filename === "go.mod" ||
                f.filename === "go.sum" ||
                f.filename === "install.sh" ||
                f.filename === "main.go"
              )
            fileSet.forEach(i => console.log(" > " + i.status + ": " + i.filename))
            overallCount = overallCount + fileSet.length
            currentCount = result.data.length
            if (currentCount == pageSize){
              currentPage = currentPage + 1
            }
          } while (currentCount == pageSize && currentPage <= maxPages)

          const canSkip = (overallCount == 0 && currentPage <= maxPages)
          if(canSkip){
            console.log("The PR changes neither SBO release, images nor manifests, nor the acceptance testing framework, nor the related CI. Execution of the acceptance tests CAN be skipped. (See https://issues.redhat.com/browse/APPSVC-1116)")
            if(setLabel){
              console.log("Setting label: " + labelName)
              const result = await github.rest.issues.addLabels({
                owner: context.payload.repository.owner.login,
                repo: context.payload.repository.name,
                issue_number: context.payload.number,
                labels: [labelName]
              })
            }
          } else {
            if (currentPage > maxPages) {
              console.log("Overall the PR changes more than the maximum number of " + (pageSize * maxPages) + " files and so cannot be determined if any of those beyond effect SBO release, images or manifests, or the acceptance testing framework, or the related CI. The acceptance tests CAN NOT be skipped.")
            } else {
              console.log("The PR changes files that effect SBO release, images or manifests, or the acceptance testing framework, or the related CI. The acceptance tests CAN NOT be skipped.")
            }
            if(setLabel){
              const labels = await github.rest.issues.listLabelsOnIssue({
                owner: context.payload.repository.owner.login,
                repo: context.payload.repository.name,
                issue_number: context.payload.number,
                per_page: 100
              })
              if(labels.data.filter(f => f.name == labelName).length > 0){
                console.log("Removing label: " + labelName)
                const result = await github.rest.issues.removeLabel({
                  owner: context.payload.repository.owner.login,
                  repo: context.payload.repository.name,
                  issue_number: context.payload.number,
                  name: labelName
                })
              }
            }
          }

          return canSkip
