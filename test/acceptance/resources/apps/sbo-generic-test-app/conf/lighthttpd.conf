#######################################################################
##
## /etc/lighttpd/lighttpd.conf
##
## check /etc/lighttpd/conf.d/*.conf for the configuration of modules.
##
#######################################################################

var.log_root    = "/var/log/lighttpd"
var.server_root = "/"
var.state_dir   = "/var/run"
var.conf_dir    = "/etc/lighttpd"


##
## Cache for mod_deflate
##
## used in:
## conf.d/deflate.conf
##
var.cache_dir   = "/var/cache/lighttpd"

##
#######################################################################

#######################################################################
##
## Load the modules.
#include "modules.conf"

##
#######################################################################

#######################################################################
##
##  Basic Configuration
## ---------------------
##
server.port = 8080

##
## bind to a specific IP
##
#server.bind = "localhost"

##
## Run as a different username/groupname.
## This requires root permissions during startup.
##
# server.username  = "lighttpd"
# server.groupname = "lighttpd"

##
## Enable lighttpd to serve requests on sockets received from systemd
## https://www.freedesktop.org/software/systemd/man/systemd.socket.html
##
#server.systemd-socket-activation = "enable"

##
## enable core files.
##
#server.core-files = "disable"

##
## Document root
##
server.document-root = server_root

##
## The value for the "Server:" response field.
##
## It would be nice to keep it at "lighttpd".
##
#server.tag = "lighttpd"

##
## store a pid file
##
server.pid-file = state_dir + "/lighttpd.pid"

##
#######################################################################

#######################################################################
##
##  Logging Options
## ------------------
##
## all logging options can be overwritten per vhost.
##
## Path to the error log file
##
server.errorlog             = log_root + "/error.log"

##
## If you want to log to syslog you have to unset the
## server.errorlog setting and uncomment the next line.
##
#server.errorlog-use-syslog = "enable"

##
## The basic network interface for all platforms at the syscalls read()
## and write(). Every modern OS provides its own syscall to help network
## servers transfer files as fast as possible
##
## sendfile       - is recommended for small files.
## writev         - is recommended for sending many large files
##
server.network-backend = "sendfile"

##
## url handling modules (rewrite, redirect)
##
#url.rewrite                = ( "^/$"             => "/server-status" )
#url.redirect               = ( "^/wishlist/(.+)" => "http://www.example.com/$1" )

##
## both rewrite/redirect support back reference to regex conditional using %n
##
#$HTTP["host"] =~ "^www\.(.*)" {
#  url.redirect            = ( "^/(.*)" => "http://%1/$1" )
#}

##
## which extensions should not be handle via static-file transfer
##
## .php, .pl, .fcgi are most often handled by mod_fastcgi or mod_cgi
##
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi", ".scgi" )

##
## Should lighttpd follow symlinks?
##
server.follow-symlink = "enable"

server.modules = (
    "mod_access",
    "mod_alias",
    "mod_cgi",
    "mod_setenv"
)


alias.url = (
    "/env" => "/tmp/env.json"
)

cgi.assign = ( ".sh" => "/bin/bash" )

$HTTP["url"] =~ "^/env/(.+)$" {
  alias.url = ( "/env" => "/bin/env.sh" )
}

$HTTP["url"] == "/postgres-ready" {
  alias.url = ( "/postgres-ready" => "/bin/postgres-ready.sh" )
  setenv.add-environment = (
      "PATH" => env.PATH
  )

}

mimetype.assign             = (
   ".json" => "application/json"
)