apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: servicebindings.operators.coreos.com
spec:
  group: operators.coreos.com
  names:
    kind: ServiceBinding
    listKind: ServiceBindingList
    plural: servicebindings
    shortNames:
    - sbr
    - sbrs
    singular: servicebinding
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ServiceBinding expresses intent to bind an operator-backed service
        with an application workload.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ServiceBindingSpec defines the desired state of ServiceBinding
          properties:
            application:
              description: Application is used to identify the application connecting
                to the backing service operator.
              properties:
                bindingPath:
                  description: 'BindingPath refers to the paths in the application
                    workload''s schema where the binding workload would be referenced.
                    If BindingPath is not specified the default path locations is
                    going to be used.  The default location for ContainersPath is
                    going to be: "spec.template.spec.containers" and if SecretPath
                    is not specified, the name of the secret object is not going to
                    be specified.'
                  properties:
                    containersPath:
                      description: 'ContainersPath defines the path to the corev1.Containers
                        reference If BindingPath is not specified, the default location
                        is going to be: "spec.template.spec.containers"'
                      type: string
                    secretPath:
                      description: 'SecretPath defines the path to a string field
                        where the name of the secret object is going to be assigned.
                        Note: The name of the secret object is same as that of the
                        name of SBR CR (metadata.name)'
                      type: string
                  type: object
                group:
                  type: string
                labelSelector:
                  description: A label selector is a label query over a set of resources.
                    The result of matchLabels and matchExpressions are ANDed. An empty
                    label selector matches all objects. A null label selector matches
                    no objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
                resource:
                  type: string
                version:
                  type: string
              required:
              - group
              - resource
              - version
              type: object
            bindAsFiles:
              description: BindAsFiles makes available the binding values as files
                in the application's container See MountPath attribute description
                for more details.
              type: boolean
            detectBindingResources:
              description: DetectBindingResources is flag used to bind all non-bindable
                variables from different subresources owned by backing operator CR.
              type: boolean
            mappings:
              description: Custom mappings
              items:
                description: ServiceBindingMapping defines a new binding from set
                  of existing bindings
                properties:
                  name:
                    description: Name is the name of new binding
                    type: string
                  value:
                    description: Value is a template which will be rendered and ibjected
                      into the application
                    type: string
                required:
                - name
                - value
                type: object
              type: array
            mountPath:
              description: MountPath is the path inside app container where bindings
                will be mounted If `SERVICE_BINDING_ROOT` env var is present, mountPath
                is ignored. If `SERVICE_BINDING_ROOT` is absent and mountPath is present,
                set `SERVICE_BINDING_ROOT` as mountPath value If `SERVICE_BINDING_ROOT`
                is absent but mounthPath is absent, set   SERVICE_BINDING_ROOT as
                `/bindings` When mountPath is used, the file will be mounted directly
                under that directory Otherwise it will be under `SERVICE_BINDING_ROOT`/<SERVICE-BINDING-NAME>
              type: string
            namePrefix:
              description: NamePrefix is the prefix for environment variables or file
                name
              type: string
            services:
              description: Services is used to identify multiple backing services.
              items:
                description: Service defines the selector based on resource name,
                  version, and resource kind
                properties:
                  group:
                    type: string
                  id:
                    type: string
                  kind:
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                  namePrefix:
                    type: string
                  namespace:
                    type: string
                  version:
                    type: string
                required:
                - group
                - kind
                - version
                type: object
              minItems: 1
              type: array
          required:
          - services
          type: object
        status:
          description: ServiceBindingStatus defines the observed state of ServiceBinding
          properties:
            applications:
              description: Applications contain all the applications filtered by name
                or label
              items:
                description: BoundApplication defines the application workloads to
                  which the binding secret has injected.
                properties:
                  group:
                    type: string
                  kind:
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                  version:
                    type: string
                required:
                - group
                - kind
                - version
                type: object
              type: array
            conditions:
              description: Conditions describes the state of the operator's reconciliation
                functionality.
              items:
                description: Condition represents the state of the operator's reconciliation
                  functionality.
                properties:
                  lastHeartbeatTime:
                    format: date-time
                    type: string
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    description: ConditionType is the state of the operator's reconciliation
                      functionality.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            secret:
              description: Secret is the name of the intermediate secret
              type: string
          required:
          - conditions
          - secret
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
