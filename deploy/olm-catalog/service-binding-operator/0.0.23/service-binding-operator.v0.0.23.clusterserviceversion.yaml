apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "operators.coreos.com/v1alpha1",
          "kind": "ServiceBinding",
          "metadata": {
            "name": "example-servicebinding"
          },
          "spec": {
            "application": {
              "group": "apps",
              "resource": "deployments",
              "name": "nodejs-rest-http-crud",
              "version": "v1"
            },
            "services": {
              "group": "postgresql.example.dev",
              "kind": "Database",
              "name": "pg-instance",
              "version": "v1alpha1"
            },
            "mountPathPrefix": "/var/credentials"
          }
        }
      ]
    capabilities: Basic Install
    categories: Developer Tools, OpenShift Optional, Integration & Delivery
    createdAt: CSV_CREATION_TIMESTAMP
    repository: https://github.com/redhat-developer/service-binding-operator
    support: Red Hat, Inc
    containerImage: REPLACE_IMAGE
    description: An operator to support binding capabilities between imported apps and operator backed services
  name: service-binding-operator.v0.0.23
  namespace: placeholder
spec:
  icon:
  - base64data: ICON_BASE64_DATA
    mediatype: ICON_MEDIA_TYPE
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Expresses intent to bind an operator-backed service with a Deployment
      kind: ServiceBinding
      name: servicebindings.operators.coreos.com
      version: v1alpha1
  description: '
   The Service Binding Operator enables application developers
   to more easily bind applications together with operator managed backing services such as databases,
   without having to perform manual configuration of secrets, configmaps, etc.
   The Service Binding Operator accomplishes this through automatically collecting binding information
   and sharing with an application to bind it with operator managed backing services.
   The binding is performed through a new custom resource called a ServiceBinding.

   ### Example

   A set of examples, each of which illustrates a usage scenario for the Service Binding Operator,
   is being developed in parallel with the Operator. Each example includes documentation
   and can be run either through the OpenShift web console or command line client.
   The examples are available [here](https://github.com/redhat-developer/service-binding-operator/blob/master/README.md#example-scenarios)

   ### Documentation

   Refer to the [documentation](https://github.com/redhat-developer/service-binding-operator/blob/master/README.md)

   ###  Help

   Raise a ticket for bugs, features and enhancement [here](https://github.com/redhat-developer/service-binding-operator/)

   ### Licence

   Service Binding Operator is licensed under [Apache License 2.0](https://github.com/redhat-developer/service-binding-operator/blob/master/LICENSE)
  '
  displayName: Service Binding Operator
  install:
    spec:
      deployments:
      - name: service-binding-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: service-binding-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: service-binding-operator
            spec:
              containers:
              - command:
                - service-binding-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: service-binding-operator
                image: REPLACE_IMAGE
                imagePullPolicy: Always
                name: service-binding-operator
                resources: {}
              serviceAccountName: service-binding-operator
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - service-binding-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - operators.coreos.com
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - '*'
          resources:
          - '*'
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - serving.knative.dev
          resources:
          - services
          verbs:
          - '*'
        serviceAccountName: service-binding-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  maturity: alpha
  links:
    - name: Blog post
      url: https://developers.redhat.com/blog/2019/12/19/introducing-the-service-binding-operator
  maintainers:
    - email: service-binding-support@redhat.com
      name: Openshift Application Services
  provider:
    name: Red Hat, Inc.
  version: 0.0.23
